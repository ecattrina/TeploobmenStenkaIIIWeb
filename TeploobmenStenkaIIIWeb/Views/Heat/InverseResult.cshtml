@using TeploobmenStenkaIIIWeb.Models.InputModels.Inverse
@model InverseCalculationModel
@{
    ViewData["Title"] = "Результаты расчета";
}

<div class="container mt-5">
    <div class="text-center">
        <h1 class="display-4 mb-4">Результаты расчета</h1>
        <div class="row justify-content-center">
            <div class="col-md-10">
                <div class="card shadow-lg mb-4">
                    <div class="card-body p-5">
                        <div asp-validation-summary="All" class="text-danger"></div>
                        @if (!string.IsNullOrEmpty(Model.WarningMessage))
                        {
                            <div class="alert alert-warning d-flex align-items-center" role="alert">
                                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                                <div>@Model.WarningMessage</div>
                            </div>
                        }
                        else if (Model.FourierNumber <= 0.3 || double.IsNaN(Model.Time))
                        {
                            <div class="alert alert-danger d-flex align-items-center" role="alert">
                                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                                <div>
                                    Введены некорректные параметры. Проверьте значения и попробуйте снова.
                                </div>
                            </div>
                            <a asp-action="InverseProblem" class="btn btn-primary btn-lg mt-3">
                                <i class="bi bi-arrow-left me-2"></i>Вернуться к расчету
                            </a>
                        }
                        else
                        {
                            <div class="row">
                                <div class="col-md-6">
                                    <h4>Исходные параметры</h4>
                                    <dl class="row">
                                        <dt class="col-sm-6">Толщина пластины:</dt>
                                        <dd class="col-sm-6">@Model.Thickness м</dd>

                                        <dt class="col-sm-6">Начальная температура:</dt>
                                        <dd class="col-sm-6">@Model.InitialTemperature °C</dd>

                                        <dt class="col-sm-6">Температура среды:</dt>
                                        <dd class="col-sm-6">@Model.EnvironmentTemperature °C</dd>

                                        <dt class="col-sm-6">Целевая температура:</dt>
                                        <dd class="col-sm-6">@Model.TargetTemperature °C</dd>
                                    </dl>
                                </div>

                                <div class="col-md-6">
                                    <h4>Теплофизические свойства</h4>
                                    <dl class="row">
                                        <dt class="col-sm-6">Плотность:</dt>
                                        <dd class="col-sm-6">@Model.Density кг/м³</dd>

                                        <dt class="col-sm-6">Теплоемкость:</dt>
                                        <dd class="col-sm-6">@Model.HeatCapacity Дж/(кг·К)</dd>

                                        <dt class="col-sm-6">Теплопроводность:</dt>
                                        <dd class="col-sm-6">@Model.ThermalConductivity Вт/(м·К)</dd>

                                        <dt class="col-sm-6">Коэф. теплоотдачи:</dt>
                                        <dd class="col-sm-6">@Model.HeatTransferCoefficient Вт/(м²·К)</dd>
                                    </dl>
                                </div>
                            </div>

                            <div class="row mt-4">
                                <div class="col-md-12">
                                    <h4>Результаты</h4>
                                    <dl class="row">
                                        <dt class="col-sm-4">Число Био (Bi):</dt>
                                        <dd class="col-sm-8">@Model.BiotNumber.ToString("F4")</dd>

                                        <dt class="col-sm-4">Число Фурье (Fo):</dt>
                                        <dd class="col-sm-8">@Model.FourierNumber.ToString("F4")</dd>

                                        <dt class="col-sm-4">Время процесса:</dt>
                                        <dd class="col-sm-8">
                                            @{
                                                var ts = TimeSpan.FromSeconds(Model.Time);
                                                @($"{ts.Hours} ч {ts.Minutes} мин")
                                            }
                                        </dd>
                                    </dl>
                                </div>
                            </div>

                            <div class="row mt-4">
                                <div class="col-md-12">
                                    <h4>Диаграмма температур</h4>
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>Момент, с</th>
                                                <th>Температура в центре, °C</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var data in Model.DiagramData.Skip(1))
                                            {
                                                <tr>
                                                    <td>
                                                        @{
                                                            var momentTs = TimeSpan.FromSeconds(data.TimeStamp);
                                                            @($"{momentTs.Hours} ч {momentTs.Minutes} мин")
                                                        }
                                                    </td>
                                                    <td>@data.CenterTemp.ToString("F2")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                            <div class="row mt-4">
                                <div class="col-md-12">
                                    <h4>График зависимости температуры от времени</h4>
                                    <canvas id="temperatureChart"></canvas>
                                </div>
                            </div>
                        }
                        <div class="mt-4 d-flex gap-2">
                            <a asp-action="Index" class="btn btn-primary btn-lg px-4"><i class="bi bi-house-door me-2"></i>На главную</a>
                            <a asp-action="InverseProblem" class="btn btn-secondary btn-lg px-4">Новый расчет (обратная задача)</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const ctx = document.getElementById('temperatureChart').getContext('2d');
            const data = @Html.Raw(Json.Serialize(Model.DiagramData.Skip(1).Select(d => new { 
                time = d.TimeStamp,
                temp = d.CenterTemp 
            })));

            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: data.map(d => {
                        const hours = Math.floor(d.time / 3600);
                        const minutes = Math.floor((d.time % 3600) / 60);
                        return `${hours} ч ${minutes} мин`;
                    }),
                    datasets: [{
                        label: 'Температура в центре, °C',
                        data: data.map(d => d.temp),
                        borderColor: 'rgb(75, 192, 192)',
                        tension: 0.1,
                        fill: false
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Зависимость температуры от времени'
                        }
                    },
                    scales: {
                        y: {
                            title: {
                                display: true,
                                text: 'Температура, °C'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Время'
                            }
                        }
                    }
                }
            });
        });
    </script>
}

<style>
    body {
        background-color: #f8f9fa;
        font-family: 'Century Gothic', CenturyGothic, AppleGothic, sans-serif;
    }
    .card {
        border-radius: 15px;
        border: none;
    }
    .btn-lg {
        font-weight: 500;
        border-radius: 10px;
        transition: all 0.3s;
    }
    .btn-primary {
        background: linear-gradient(135deg, #3a7bd5, #00d2ff);
        border: none;
    }
    .btn-outline-primary:hover {
        background: linear-gradient(135deg, #f5f7fa, #c3cfe2);
    }
</style>